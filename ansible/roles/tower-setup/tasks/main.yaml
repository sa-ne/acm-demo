- name: Query Ansible Tower Route
  kubernetes.core.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: route.openshift.io/v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: Route
    name: "{{ tower_route_name }}"
    namespace: "{{ tower_namespace }}"
  register: tower_route
  retries: 60
  delay: 10
  until:
    - tower_route.resources[0].status.ingress[0].host is defined

- name: Wait for Tower API Endpoint
  ansible.builtin.uri:
    status_code: 200
    url: "https://{{ tower_route.resources[0].status.ingress[0].host }}/api"
    validate_certs: no
  register: tower_api
  retries: 60
  delay: 10
  until:
    - tower_api.status == 200

- name: Setup Ansible Tower Link in OpenShift Console
  kubernetes.core.k8s:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    state: present
    resource_definition:
      apiVersion: console.openshift.io/v1
      kind: ConsoleLink
      metadata:
        name: ansible-tower-console-link
      spec:
        applicationMenu:
          imageURL: https://upload.wikimedia.org/wikipedia/commons/2/24/Ansible_logo.svg
          section: Red Hat Applications
        href: "https://{{ tower_route.resources[0].status.ingress[0].host }}"
        location: ApplicationMenu
        text: Red Hat Ansible Tower

- name: Install Tower License
  ansible.tower.tower_license:
    eula_accepted: yes
    manifest: /var/secrets/tower-setup/manifest
    tower_host: "https://{{ tower_route.resources[0].status.ingress[0].host }}"
    tower_password: "{{ lookup('file', '/var/secrets/tower-setup/password') }}"
    tower_username: "{{ lookup('file', '/var/secrets/tower-setup/username') }}"
    validate_certs: "{{ validate_certs }}"

- name: Create Tower Projects
  ansible.tower.tower_project:
    name: "{{ item.name }}"
    organization: "{{ item.org }}"
    scm_branch: "{{ item.scm_branch }}"
    scm_type: "{{ item.scm_type }}"
    scm_update_on_launch: "{{ item.scm_update_on_launch }}"
    scm_url: "{{ item.scm_url }}"
    state: present
    tower_host: "https://{{ tower_route.resources[0].status.ingress[0].host }}"
    tower_password: "{{ lookup('file', '/var/secrets/tower-setup/password') }}"
    tower_username: "{{ lookup('file', '/var/secrets/tower-setup/username') }}"
    validate_certs: "{{ validate_certs }}"
  loop: "{{ tower_projects }}"

- name: Create AWS Credentials
  ansible.tower.tower_credential:
    credential_type: Amazon Web Services
    inputs:
      password: "{{ item.password }}"
      username: "{{ item.username }}"
    name: "{{ item.name }}"
    organization: "{{ item.org }}"
    state: present
    tower_host: "https://{{ tower_route.resources[0].status.ingress[0].host }}"
    tower_password: "{{ lookup('file', '/var/secrets/tower-setup/password') }}"
    tower_username: "{{ lookup('file', '/var/secrets/tower-setup/username') }}"
    validate_certs: "{{ validate_certs }}"
  loop: "{{ tower_aws_credentials }}"

- name: Create Job Templates
  ansible.tower.tower_job_template:
    ask_variables_on_launch: "{{ item.ask_variables_on_launch }}"
    credentials: "{{ item.credentials }}"
    name: "{{ item.name }}"
    inventory: "{{ item.inventory }}"
    organization: "{{ item.org }}"
    project: "{{ item.project }}"
    playbook: "{{ item.playbook }}"
    tower_host: "https://{{ tower_route.resources[0].status.ingress[0].host }}"
    tower_password: "{{ lookup('file', '/var/secrets/tower-setup/password') }}"
    tower_username: "{{ lookup('file', '/var/secrets/tower-setup/username') }}"
    validate_certs: "{{ validate_certs }}"
  loop: "{{ tower_job_templates }}"